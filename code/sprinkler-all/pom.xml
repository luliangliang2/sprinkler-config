<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cnedutech</groupId>
	<artifactId>sprinkler-all</artifactId>
	<version>${project.version}</version>

	<name>Maven</name>
	<url>http://maven.apache.org/</url>
	<inceptionYear>2001</inceptionYear>

	<distributionManagement>
		<site>
			<id>website</id>
			<url>scp://webhost.company.com/www/website</url>
		</site>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-parent</artifactId>
			<version>2.0.6.RELEASE</version>
			<type>pom</type>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>2.0.2.RELEASE</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-parent</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.encoding>UTF-8</maven.compiler.encoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<!--统一管理项目的jar -->
		<project.version>1.0</project.version>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.test.skip>true</maven.test.skip>
		<spring.version>5.0.0.RELEASE</spring.version>
		<commons-lang3.version>3.3.2</commons-lang3.version>
		<fastjson.version>1.2.62</fastjson.version>
		<guava.version>28.1-jre</guava.version>

		<!--slf4j 1.7.10 和 logback-classic 1.0.13 是好基友 -->
		<slf4j-api.version>1.7.28</slf4j-api.version>
		<logback-classic.version>1.2.2</logback-classic.version>
		<commons-io.version>2.4</commons-io.version>
		<junit.version>4.12</junit.version>
		<hutool.version>4.5.1</hutool.version>

		<postgresql.version>42.2.5</postgresql.version>
		<druid.version>1.1.14</druid.version>
		<mysql-connector.version>5.1.47</mysql-connector.version>
		<jna.version>4.1.0</jna.version>

		<commons-exec.version>1.3</commons-exec.version>
		<groovy.version>2.5.8</groovy.version>

		<mybatisplus.version>3.0.7.1</mybatisplus.version>
		<swagger.version>2.9.2</swagger.version>
		<swagger-models.version>1.5.21</swagger-models.version>

		<spring.version>4.3.25.RELEASE</spring.version>
		<junit.version>4.12</junit.version>
		<spring-boot.version>2.0.6.RELEASE</spring-boot.version>

		<swagger-bootstrap-ui.version>1.9.6</swagger-bootstrap-ui.version>

		<jjwt.version>0.9.0</jjwt.version>

		<netty.version>4.1.43.Final</netty.version>
		<hessian.version>4.0.63</hessian.version>
	</properties>

	<build>
		<plugins>
			<!--打包插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- YUI Compressor Maven js,css压缩插件,一般不需要，可删除 -->
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>yuicompressor-maven-plugin</artifactId>
				<version>1.5.1</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>compress</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- 读取js,css文件采用UTF-8编码默认就是utf-8 -->
					<encoding>UTF-8</encoding>
					<!-- 不显示js可能的错误 -->
					<jswarn>false</jswarn>
					<!-- 若存在已压缩的文件，会先对比源文件是否有改动 有改动便压缩，无改动就不压缩 -->
					<force>true</force>
					<!-- 在指定的列号后插入新行 -->
					<linebreakpos>-1</linebreakpos>
					<!-- 压缩之前先执行聚合文件操作 -->
					<preProcessAggregates>true</preProcessAggregates>
					<!-- 压缩后保存文件后缀 无后缀 -->
					<nosuffix>true</nosuffix>
					<!-- 源目录，即需压缩的根目录 -->
					<sourceDirectory>src/main/static</sourceDirectory>
					<outputDirectory>target/classes</outputDirectory>
					<force>true</force>
					<!-- 压缩js和css文件 -->
					<includes>
						<include>*/js/**/*.js</include>
						<include>*/css/**/*.css</include>
					</includes>
					<excludes>
						<exclude>**/*.min.js</exclude>
						<exclude>**/*-min.js</exclude>
						<exclude>**/index/carousel.js</exclude>
						<exclude>**/3dprint/layer/**/*.js</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- html页面中的 css,js添加版本号插件 -->
			<!--plugin> <groupId>com.google.code.maven-replacer-plugin</groupId> <artifactId>replacer</artifactId> 
				<version>1.5.3</version> <executions> <execution> <phase>prepare-package</phase> 
				<goals> <goal>replace</goal> </goals> </execution> </executions> <configuration> 
				<includes> <include>${basedir}/target/classes/templates/*.html</include> 
				<include>${basedir}/target/classes/templates/**/*.html</include> </includes> 
				<replacements> <replacement> <token>\.css\"</token> <value>.css?v=${maven.build.timestamp}\"</value> 
				</replacement> <replacement> <token>\.css\'</token> <value>.css?v=${maven.build.timestamp}\'</value> 
				</replacement> <replacement> <token>\.js\"</token> <value>.js?v=${maven.build.timestamp}\"</value> 
				</replacement> <replacement> <token>\.js\'</token> <value>.js?v=${maven.build.timestamp}\'</value> 
				</replacement> </replacements> </configuration> </plugin -->
		</plugins>
	</build>
	<packaging>pom</packaging>
	<modules>
		<module>sprinkler-common</module>
		<module>sprinkler-web</module>
		<module>sprinkler-orm</module>
		<module>sprinkler-eureka</module>
		<module>sprinkler-server-provider</module>
		<module>sprinkler-provider</module>
		<module>sprinkler-consumer</module>
		<module>sprinkler-cloud-config</module>
		<module>sprinkler-oath2-server</module>
		<module>sprinkler-oath2-client</module>
	</modules>
</project>