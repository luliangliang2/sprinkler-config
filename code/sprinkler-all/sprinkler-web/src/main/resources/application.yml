server:
  port: 9000
# spring
spring: 
  application:
    name: web
   #jta相关参数配置   
  jta:
    log-dir: classpath:tx-logs
    transaction-manager-id: txManager   
  main:
    allow-bean-definition-overriding: true
      
freeager:
  atomikos:
    database1:
        basePackage: org.sprinkler.mapper.db1
         #默认的连接
        isDefault: true
        name: DataSource1
        url: jdbc:mysql://10.211.55.45:3306/chick
        username: root
        password: root
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒 
        minEvictableIdleTimeMillis: 30
        validationQuery: SELECT user()
        validationQueryTimeout: 10000
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小 
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        filters: stat,wall
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true 
      
    database2:
        basePackage: org.sprinkler.mapper.db2
        name: DataSource2
        url: jdbc:mysql://localhost:3306/new?useSSL=false
        username: root
        password: root
        # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        initialSize: 5
        minIdle: 5
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒 
        minEvictableIdleTimeMillis: 30
        validationQuery: SELECT user()
        validationQueryTimeout: 10000
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小 
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        filters: stat,wall
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: true 


#配置服务端的地址
auth-server: http://localhost:8080/uac

#配饰客户端的认证方式
security:
  oauth2:
    client:
      client-id: sheep1
      client-secret: 123456
      user-authorization-uri: ${auth-server}/oauth/authorize
      access-token-uri: ${auth-server}/oauth/token
    resource:
      jwt:
        key-uri: ${auth-server}/oauth/token_key

hystrix:
  command:
    default:
      execution:
          isolation:
              thread:
                 timeoutInMilliseconds: 3000

       
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
      
feign: 
  hystrix: 
    enabled: false
  httpclient:
    enabled: true
    
ribbon:
  eureka:
    enabled: true
      
  